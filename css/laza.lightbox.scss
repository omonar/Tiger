@charset "UTF-8";
/* laza.lightbox.scss */

$loadingbox-size: 	40;
$fitTiming:			300ms;

@import 'defaults';

/* Loading animation */
@-webkit-keyframes lightbox-loading {
	0% 		{ opacity: .5; -webkit-transform: scale(.75); }
	50% 	{ opacity: 1;	-webkit-transform: scale(1); }
	100% 	{ opacity: .5; -webkit-transform: scale(.75); }
}

@-moz-keyframes lightbox-loading {
	0% 		{ opacity: .5; -moz-transform: scale(.75); }
	50% 	{ opacity: 1;	-moz-transform: scale(1); }
	100% 	{ opacity: .5; -moz-transform: scale(.75); }
}

@keyframes lightbox-loading {
	0% 		{ opacity: .5; transform: scale(.75); }
	50% 	{ opacity: 1;	transform: scale(1); }
	100% 	{ opacity: .5; transform: scale(.75); }
}
@-moz-keyframes timer { 
	0%		{ width: 0; } 
	100%	{ width: 100%; } 
}
@-webkit-keyframes timer {
	0%		{ width: 0; } 
	100%	{ width: 100%; } 
}
@keyframes timer { 
	0%		{ width: 0; } 
	100%	{ width: 100%; } 
}

.use-mainbg .lightbox .lightbox-overlay {
	background-image: _B('backgroundImage? ("url(" + backgroundImage + ")") : "none"');
	background-position: _B('backgroundPos? backgroundPos : "top center"');
	background-repeat: _B('(backgroundImage && backgroundRepeat && backgroundRepeat !== "stretch")? backgroundRepeat : "repeat"');
	background-size: _B('(backgroundImage && backgroundRepeat === "stretch")? "cover" : "auto"');
	background-attachment: fixed;
}	
.lightbox {
	position: fixed;
	left: 0;
	top: 0;
	width: 100%;
	height: 100%;
	z-index: 200000;
	.lightbox-overlay {
		position: absolute;
		left: 0;
		top: 0;
		width: 100%;
		height: 100%;
		background-color: _(lightboxBgColor);
		z-index: 0;
	}
	// Load animation
	.lightbox-loading,
	.lightbox-loading div {
		border-radius: 50%;
	}
	.lightbox-loading {
		position: absolute;
		margin: (-$loadingbox-size/2)+px 0 0 (-$loadingbox-size/2)+px;
		padding: ($loadingbox-size/4)+px;
		left: 50%;
		top: 50%;
		width: ($loadingbox-size)+px;
		height: ($loadingbox-size)+px;
		background: rgba(0,0,0,.5);
		box-shadow: rgba(0, 0, 0, .5) 0 0 ($loadingbox-size)+px;
		z-index: 1;
		div {
			height: ($loadingbox-size/2)+px;
			width: ($loadingbox-size/2)+px;
			background-color: #fff;
			@include animation(lightbox-loading 1s ease infinite);	
		}
	}
	.lightbox-main {
		.lightbox-loading {
			div {
				background-color: _(buttonBgColor);
			}
		}
	}
	.thumb-strip {
		position: absolute;
		max-width: 100%;
		transform: translateX(-50%);
		left: 50%;
		top: _U(-thumbstripHeight,px);
		height: _U(thumbstripHeight,px);
		padding: 0 5px;
		background-color: _(lightboxBoxBg);
		border-radius: 0 0 _U(brm,px) _U(brm,px);
		box-shadow: _(lightboxBoxShadow);
		z-index: 10;
		text-align: left;
		transition: top $fitTiming ease-out, background-color $fitTiming, opacity $fitTiming;
		.thumb-cont {
			position: relative;
			height: 100%;
			overflow: hidden;
			@include user-select(none);
			.thumbs {
				margin-top: 5px;
				height: _U(thumbsHeight,px);
				white-space: nowrap;
				transform: translateX(0);
				a {
					display: inline-block;
					height: 100%;
					vertical-align: top;
					margin: 0 1px 0 0;
					padding: 0 0 4px 0;
					cursor: default;
					line-height: _U(thumbstripHeight,px);
					&:hover {
						background-color: _(lightboxButtonHover);
					}
					&.active {
						background-color: _(lightboxTextColor);
					}
					img {
						vertical-align: top;
					}
				}
			}
		}
		button {
			position: absolute;
			display: none;
			color: _(lightboxTextColor);
			transition: color $transTime;
			&.left, &.right {
				width: 3rem;
				font-size: 1.5rem;
				text-align: center;
				top: 0;
				height: 100%;
			}				
			&.left {
				left: 0;
			}
			&.right {
				right: 0;
			}
		}
		&:hover {
			background-color: _(lightboxBoxHoverBg);
			button {
				color: _(lightboxButtonHover);
			}
		}
		&.scroll {
			width: 100%;
			padding: 0 3rem;
			.thumb-cont {
				overflow: hidden;
				.thumbs {
					position: absolute;
					left: 0;
					overflow: hidden;
				}
			}
			button {
				display: inline-block;
			}
		}
	}
	
	.controls {
		position: absolute;
		display: flex;
		overflow: hidden;
		left: 50%;
		top: 0;
		max-width: 100vw;
		transform: translateX(-50%);
		background-color: _(lightboxBoxBg);
		border-radius: 0 0 _U(brm,px) _U(brm,px);
		box-shadow: _(lightboxBoxShadow);
		z-index: 11;
		opacity: 1;
		transition: top $fitTiming ease-out, background-color $fitTiming, opacity $transTime2;
		&.use-text {
			button {
				font-size: 9px;
				padding: 0 2px 2px 2px;
				min-width: 48px;
				text-align: center;
				&:before {
					display: block;
					line-height: 30px;
				}
			}
		}
		button {
			display: block;
			padding: 0 10px;
			color: _(lightboxTextColor);
			transition: color $transTime ease-out, background-color $transTime ease-out;
			&:before {
				font-size: 18px;
				line-height: 48px;
			}
			&.previous,
			&.next {
				padding: 0 2px;
			}
			&.previous:before,
			&.next:before {
				font-size: 36px;
			}
			&:hover {
				color: _(lightboxButtonHover);
				background-color: _(lightboxBoxHoverBg);
			}
			&:focus {
				outline: 1px dotted rgba(224,224,224,0.1);
			}
			.progress {
				position: absolute;
				height: 1px;
				overflow: hidden;
				background-color: #999;
				width: 0;
				left: 0;
				bottom: 0;
				content: ' ';
				z-index: 24;
				-moz-animation: timer _U(slideshowDelay,s) linear;
				-webkit-animation: timer _U(slideshowDelay,s) linear;
				-ms-animation: timer _U(slideshowDelay,s) linear;
				animation: timer _U(slideshowDelay,s) linear;
			}
		}
		&:hover {
			background-color: _(lightboxBoxHoverBg);
		}
	}
	
	.lightbox-main {
		position: absolute;
		z-index: 1;
		padding: _U(lightboxBorderWidth,px);
		background-color: _B('(lightboxBorderWidth > 0)? lightboxBorderColorCss : "transparent"');
		box-shadow: _(lightboxImageShadow);
		border-radius: _U(imgCornerRadius,px);
		transition: left $transTime ease-out, 
					top $transTime ease-out, 
					width $transTime ease-out, 
					height $transTime ease-out,
					transform $transTime,
					opacity $transTime;
		> * {
			border-radius: _U(lightboxImageCornerRadius,px);
			@include user-select(none);
		}
		&.image {
			img {
				width: 100%;
			}
		}
		&.audio {
			img.poster {
				width: 100%;
			}
			audio {
				position: absolute;
				bottom: _B('lightboxBorderWidth + 16 + "px"');
				left: 50%;
				max-width: 100%;
				@include translateX(-50%);
				min-width: 320px;
				width: 80%;
			}
		}
		&.video {
			video {
				width: 100%;
			}
		}
		&.other {
			min-width: 240px;
			text-align: center;
		}
		&.pdf {
			object, iframe {
				width: 100%;
				height: 100%;
			}
		}
		.click-hint {
			text-align: center;
			padding: 0.5em;
			color: _(lightText);
			font-size: 80%;
			background-color: rgba(51,51,51,0.6);
		}
		&.external {
			max-width: 100%;
			max-height: 100%;
			overflow: auto;
			&.iframe {
				overflow: hidden;
			}
		}
		&.vr {
			overflow: hidden;
			iframe {
				display: block;
			}
			.error {
				position: absolute;
				top: 50%;
				left: 50%;
				max-width: 60%;
				transform: translate(-50%, -50%);
				padding: 1rem;
				color: #eee;
				background-color: #000;
				border-radius: .5rem;
			}
		}
		
		.regions {
			position: absolute;
			left: 0;
			top: 0;
			width: 100%;
			height: 100%;
			a {
				position: absolute;
				display: inline-block;
				border: 1px solid $lighten50;
				transition: all $transTime;
				span {
					position: absolute;
					top: 0;
					left: 0;
					max-width: 100%;
					padding: 0 4px 4px 6px;
					background-color: $lighten50;
					font-size: $fontXS;
					color: _(darkText);
					text-overflow: ellipsis;
					overflow: hidden;
					white-space: nowrap;
					transition: all $transTime;
				}
				.active,
				&:hover {
					border: 1px solid #fff;
					span {
						color: _(darkerText);
						max-width: none;
						background-color: #fff;
					}
				}
			}
		}
	}
	
	.lightbox-caption {
		display: flex;
		position: absolute;
		align-items: flex-start;
		justify-content: center;
		width: 100%;
		left: 0;
		bottom: 0;
		padding: $gap1;
		background-color: _(lightboxBoxBg);
		border-radius: _U(brm,px) _U(brm,px) 0 0;
		box-shadow: _(lightboxBoxShadow);
		z-index: 12;
		transform: translateY(100%);
		transition: transform $fitTiming ease-out, opacity $transTime2;
		&.hasbuttons {
			justify-content: space-between;
			.caption {
				text-align: left;
			}
		}
		.download {
			padding: 0.5rem;
			&:before {
				color: _(lightboxTextColor);
			}
			a {
				padding: 0.2rem;
				font-size: $fontS;
			}
		}
		.ratingbox {
			margin: 0 $gap1;
			display: inline-block;
			text-align: center;
			label {
				display: block;
				letter-spacing: 0.25rem;
				font-size: 10px;
				line-height: 14px;
				opacity: 0.6;
			}
		}
		.buttons {
			display: flex;
			flex-wrap: wrap;
			align-items: center;
			justify-content: center;
			margin: 0 auto;
			.button {
				display: inline-flex;
				align-items: center;
				padding: $gap2;
				margin-bottom: 0;
				margin-right: 1px;
				text-align: left;
				font-size: $fontXS;
				color: _(lightboxTextColor);
				background-color: _(lightboxBoxHoverBg);
				transition: color $transTime, background-color $transTime;
				span {
					display: none;
				}
				&:before {
					font-size: 18px;
				}
				b {
					margin-left: .2em;
					padding: .1em .45em .2em;
					color: white;
					background-color: red;
					border-radius: _U(brs,px);
				}
				&:hover {
					color: _(buttonHoverTextColor);
					background-color: _(buttonHoverBgColor);
				}
			}
			.numbers {
				margin: 0 0.5em;
				color: _(lightboxTextColor);
			}
		}
		.caption {
			flex: 1;
			padding: $gap1;
			max-height: 30vh;
			overflow-x: hidden;
			overflow-y: auto;
			text-align: center;
			color: _(lightboxTextColor);
			@include niceWebkitScroll();
			h1, h2, h3, h4, h5, h6 {
				color: _(lightboxTextColor);
			}
			h1 {
				font-size: 1.6em;
			}
			h2 {
				font-size: 1.4em;
			}
			h3 {
				font-size: 1.2em;
			}
			h4 {
				font-size: 1.1em;
			}
		}
		&:hover {
			background-color: _(lightboxBoxHoverBg);
		}
	}
	
	.controls {
		.zoom-in,
		.zoom-out,
		.zoom-level, 
		.hide-thumbs,
		.hide-caption,
		.pause {
			display: none;
		}
	}
	
	&.thumbs-visible {
		.thumb-strip {
			top: 0;
		}
		.controls {
			top: _U(thumbstripHeight,px);
			> .hide-thumbs {
				display: inline-block;
			}
			> .show-thumbs {
				display: none;
			}
		}
	}

	&.show-zoom-in {
		.controls .zoom-in { 
			display: block;
		}
	}
	
	&.show-zoom-out {
		.controls .zoom-out { 
			display: block;
		}
	}
	
	&.show-zoom-level {
		.controls .zoom-level { 
			display: block;
		}
	}
	
	.controls .exitfullscreen {
		display: none;
	}
	
	&.fullscreen {
		.controls .fullscreen { 
			display: none;
		}
		.controls .exitfullscreen { 
			display: block;
		}
	}
	
	&.no-caption {
		.controls .show-caption,
		.controls .hide-caption { 
			display: none !important;
		}
	}		
	
	&.caption-visible {
		.lightbox-caption {
			transform: translateY(0);
		}
		.controls .hide-caption {
			display: block;
		}
		.controls .show-caption {
			display: none !important;
		}
	}
	
	&.playing {
		.controls .pause {
			display: block;
		}
		.controls .play {
			display: none !important;
		}
	}
	
	&.controls-hide {
		.controls {
			opacity: 0;
		}
	}
}

.jalbumWidgetbar .lightbox-caption {
	bottom: 20px;
}

.lightbox-caption .photodata {
	p {
		display: inline-block;
		b {
			margin: 0 .25rem 0 0;
		}
		i {
			margin: 0 1rem 0 0;
		}
	}
}

/********* medium displays >= 640px */
@media screen and (min-width: 30em) {
	.lightbox {
		.thumb-strip {
			max-width: 90%;
			&.scroll {
				width: 90%;
			}
		}
		.lightbox-caption {
			width: 90%;
			left: 5%;
		}
	}
}

@media screen and (min-width: 40em) {
	.lightbox {
		.controls {
			&.use-text {
				text-align: center;
				button {
					padding: 0 4px 4px 4px;
					min-width: 60px;
					font-size: 11px;
					&:before {
						line-height: 39px;
					}
				}
			}
			button {
				padding: 0 14px;
				&:before {
					line-height: 55px;
					font-size: 22.5px;
				}
				&.previous,
				&.next {
					padding: 0 4px;
				}
				&.previous:before,
				&.next:before {
					font-size: 45px;
				}
			}
		}
		.thumb-strip {
			max-width: 80%;
			&.scroll {
				width: 80%;
			}
		}
		.lightbox-caption {
			flex-direction: row;
			align-items: flex-start;
			width: 80%;
			left: 10%;
			.caption {
				padding: $gap1 $gap2;
				text-align: left;
				width: max-content;
			}
			.caption + .buttons {
				margin-left: auto;
			}
			.buttons {
				justify-content: flex-end;
				.button {
					margin-bottom: 1px;
					span {
						margin-left: $gap15;
						display: block;
					}
				}
			}
		}
	}
}

