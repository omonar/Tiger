<%
	var safeTitle = stripHTML(title).replace(/"/g, '&quot;').replace(/ & /g, ' &amp; '),				//" fixing syntax highlighting :)
		safeDescription = stripHTML(description).replace(/"/g, '&quot;').replace(/ & /g, ' &amp; '), 	//"
		safeThumbPath = (typeof pageThumbPath === UNDEF)? folderThumbFileName : pageThumbPath;
	
	
	out.println('<!doctype html>' +
		'\n<html ' + (shareFacebook? 'prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb#" ' : '') + 'lang="' + lang + '"' + ' class="no-js" data-level="' + level + '">' +
		'\n<!-- Generated by jAlbum: https://jalbum.net at ' + currentDate + ' (' + (license || 'unregistered') + ') -->');
	
	/*********************************************************************************
	 *									HEAD
	 */
	
	out.println('\t<head>');
	
		out.println('\t\t<meta charset="' + textEncoding + '">');
		out.println('\t\t<meta http-equiv="x-ua-compatible" content="ie=edge">');
		out.println('\t\t<meta name="viewport" content="width=device-width, initial-scale=1.0">');
		
		// Title
		out.println('\t\t<title>' + [ safeTitle, titleSEOText ].filter(Boolean).join(' ') + '</title>');
		
		// Google font
		if (typeof googleFont !== UNDEF && googleFont) {
			out.println('\t\t<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=' + googleFont + '">');
		}
		
		// Description
		out.println('\t\t<meta name="description" content="' + [ safeDescription || safeTitle, descriptionSEOText ].filter(Boolean).join(' ') + '">');
		
		// Author
		if (typeof writer !== UNDEF && writer) {
			out.println('\t\t<meta name="author" content="' + writer + '">');
		}
		
		// Generator
		out.println('\t\t<meta name="generator" content="' + [ 'jAlbum', internalVersion, '&', skinName, skinVersion, ('[' + styleName + ']') ].filter(Boolean).join(' ') + '">');
		
		// Keywords, tags
		var k = [];
		
		if (typeof keywords !== UNDEF && keywords) {
			k.push(keywords);
		}
		
		if (typeof albumTags !== UNDEF && albumTags) {
			k.push(albumTags);
		}
		
		if (k.length) {
			out.println('\t\t<meta name="keywords" content="' + k.join(' ') + '">');
		}
		
		// Folder thumbnail
		if (typeof pageUrl !== UNDEF && pageUrl) {
			out.println('\t\t<meta property="og:url" content="' + pageUrl + '">');
		}
		
		out.println('\t\t<meta property="og:image" content="' + safeThumbPath + '">');
		
		if (pageProtocol === 'https:') {
			out.println('\t\t<meta property="og:image:secure_url" content="' + safeThumbPath + '">');
		}
		out.println('\t\t<meta property="og:image:width" content="' + folderThumbSize.split('x')[0] + '">');
		out.println('\t\t<meta property="og:image:height" content="' + folderThumbSize.split('x')[1] + '">');
		out.println('\t\t<link rel="image_src" href="' + safeThumbPath + '">');
		out.println('\t\t<meta name="twitter:image" content="' + safeThumbPath + '">');
		
		// Title, description for OG
		out.println('\t\t<meta property="og:title" content="' + safeTitle + '">');
		if (safeDescription) {
			out.println('\t\t<meta property="og:description" content="' + safeDescription + '">');
		}
		
		// OG type
		out.println('\t\t<meta property="og:type" content="website">');
		
		// FB app ID
		if (facebookAppId) {
			out.println('\t\t<meta property="fb:app_id" content="' + facebookAppId + '">');
		}
		
		// Twitter-related meta tags
		out.println('\t\t<meta name="twitter:title" content="' + safeTitle + '">');
		out.println('\t\t<meta name="twitter:card" content="summary">');
		
		if (safeDescription) {
			out.println('\t\t<meta name="twitter:description" content="' + safeDescription + '">');
		}
		
		// Mobile-related meta
		out.println('\t\t<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">');
		out.println('\t\t<meta name="apple-mobile-web-app-capable" content="yes">');
		out.println('\t\t<meta name="format-detection" content="telephone=no">');
		
		// Preloading icon font
		out.println('\t\t<link rel="preload" href="' + resPath + '/icon/skinicon-' + iconStyle + '.woff?v' + skinVersion + '" as="font" type="font/woff" crossorigin>');
		out.println('\t\t<link rel="preload" href="' + resPath + '/icon/skinicon-' + iconStyle + '.ttf?v' + skinVersion + '" as="font" type="font/ttf" crossorigin>');
		out.println('\t\t<link rel="prefetch" href="' + resPath + '/icon/skinicon-' + iconStyle + '.svg?v' + skinVersion + '" as="font">');
		
		// Favicon
		if (useFavicon) {
			out.println('\t\t<link rel="apple-touch-icon" sizes="180x180" href="' + resPath + '/apple-touch-icon.png">');
			out.println('\t\t<link rel="icon" type="image/png" sizes="32x32" href="' + resPath + '/favicon-32x32.png">');
			out.println('\t\t<link rel="icon" type="image/png" sizes="16x16" href="' + resPath + '/favicon-16x16.png">');
			out.println('\t\t<link rel="manifest" href="' + resPath + '/site.webmanifest" crossorigin="use-credentials">');
			out.println('\t\t<link rel="mask-icon" href="' + resPath + '/safari-pinned-tab.svg" color="' + mainBgColor + '">');
			out.println('\t\t<link rel="icon" href="' + resPath + '/favicon.ico">');
			out.println('\t\t<meta name="msapplication-TileColor" content="' + mainBgColor + '">');
			out.println('\t\t<meta name="msapplication-config" content="' + resPath + '/browserconfig.xml">');
			out.println('\t\t<meta name="theme-color" content="' + mainBgColor + '">');
		}
		
		// The main CSS file
		out.println('\t\t<link rel="stylesheet" href="' + resPath + '/common.css?v=' + skinVersion + '">');
		
		// Preloading theme image
		if (heroType === 'folderImage' || heroType === 'albumImage') {
			var smallBg = folderImageSmallFileName,
				normalBg = folderImageFileName;
				
			if (heroType === 'albumImage' && rootPath !== '.') {
				smallBg = rootPath + '/' + smallBg;
				normalBg = rootPath + '/' + normalBg;
			}
		
			// Preloading theme image
			out.println('\t\t<link rel="preload" href="' + smallBg + '" as="image" media="(max-width: 800px)">');
			out.println('\t\t<link rel="preload" href="' + normalBg + '" as="image" media="(min-width: 801px)">');
			out.println('\t\t<style>');
				out.println('\t\t\t@media (max-width:800px) { .hero.full-width.bg-image, .hero.page-width.bg-image > .cont { background-image: url(' + smallBg + '); } }');
				out.println('\t\t\t@media (min-width:801px) { .hero.full-width.bg-image, .hero.page-width.bg-image > .cont { background-image: url(' + normalBg + '); } }');
			out.println('\t\t</style>');
		}
		
		// Custom page-related CSS
		getCustomPageCSS(currentObject);
		
		if (headHook) {
			out.println('\t\t' + getProcessed(headHook));
		}
		
		if (googleAnalytics === 'gtag') {
			out.println('\t\t<script async src="https://www.googletagmanager.com/gtag/js?id=' + googleSiteID + '"></script>');
			out.println('\t\t<script>');
				out.println('\t\t\twindow.dataLayer=window.dataLayer||[];');
				out.println('\t\t\tfunction gtag(){dataLayer.push(arguments);}');
				out.println('\t\t\tgtag(\'js\',new Date());');
				out.println('\t\t\tgtag(\'config\',\'' + googleSiteID + '\',{\'send_page_view\':false});');
			out.println('\t\t</script>');
		}
		
	out.println('\t</head>');

	/*********************************************************************************
	 *									BODY
	 */
	 
		out.println('\t<body id="' + pageType + '" class="' + [
					pageType,
					'scrollable', 
					'stop-transitions',
					lightStyle? 'light-mode' : 'dark-mode',
					level? 'sub-album' : 'top-level',
					heroFullWidth? 'full-width' : 'page-wide',
					(pageType === 'page')? pageHook : '',
					(typeof lightboxUseMainBg !== UNDEF && lightboxUseMainBg)? 'use-mainbg' : ''
				].filter(Boolean).join(' ') + '">');
			
		out.println(getInclude('top-bar.inc'));
		
		/*********************************************************************************
		 *								  Hero
		 */
			 
		if (pageType === 'page') {
			
			out.println(getInclude('hero-page.inc'));
			
		} else {
			
			out.println(getInclude('hero.inc'));
			
		}
		
		/*********************************************************************************
		 *								Main content
		 */
		 
		out.println('\t\t<section id="main" class="content">');
			out.println('\t\t\t<article id="main-cont" class="' + [
						((pageType === 'index' || pageHook === 'newimages-page')? 'base-overlay' : ''),
						((pageType === 'page')? 'page-wrap' : ''),
						((pageType === 'page' && useBoxForPages)? 'boxed' : '')
					].filter(Boolean).join(' ') + '">');
			
%>